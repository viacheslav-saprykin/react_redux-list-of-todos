{"version":3,"sources":["types/FilterStatus.ts","features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","api.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterStatus","actions","todo","type","payload","currentTodoReducer","state","action","query","status","initialState","ALL","filterReducer","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoList","dispatch","length","className","map","title","id","completed","cn","onClick","TodoFilter","value","onChange","event","target","ACTIVE","COMPLETED","placeholder","style","pointerEvents","Loader","TodoModal","useState","user","setUser","useEffect","userId","userFromServer","catch","error","Error","message","href","email","name","App","isLoading","setIsLoading","todosFromServer","finally","visibleTodos","useMemo","normalizedQuery","toLowerCase","trim","normalizedTodo","includes","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c0c11917.chunk.js","sourcesContent":["export enum FilterStatus {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\n// Action creator return type protect us from a mistype\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\n// These actions will be used in the application\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { FilterStatus } from '../types/FilterStatus';\n\ntype SetQueryAction = {\n  type: 'filter/SET_QUERY';\n  payload: string;\n};\n\ntype SetStatusAction = {\n  type: 'filter/SET_STATUS';\n  payload: FilterStatus;\n};\n\ntype SetClearAction = {\n  type: 'filter/SET_CLEAR';\n};\n\nconst setQuery = (query: string): SetQueryAction => ({\n  type: 'filter/SET_QUERY',\n  payload: query,\n});\n\nconst setStatus = (status: FilterStatus): SetStatusAction => ({\n  type: 'filter/SET_STATUS',\n  payload: status,\n});\n\nconst setClear = (): SetClearAction => ({\n  type: 'filter/SET_CLEAR',\n});\n\nexport const actions = {\n  setQuery,\n  setStatus,\n  setClear,\n};\n\ntype State = {\n  query: string;\n  status: FilterStatus;\n};\n\ntype Action = SetQueryAction | SetStatusAction | SetClearAction;\n\nconst initialState = {\n  query: '',\n  status: FilterStatus.ALL,\n};\n\nconst filterReducer = (state: State = initialState, action: Action) => {\n  switch (action.type) {\n    case 'filter/SET_QUERY':\n      return {\n        ...state,\n        query: action.payload,\n      };\n\n    case 'filter/SET_STATUS':\n      return {\n        ...state,\n        status: action.payload,\n      };\n\n    case 'filter/SET_CLEAR':\n      return {\n        ...state,\n        query: '',\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetTodosAction = {\n  type: 'todos/SET';\n  payload: Todo[];\n};\n\nconst setTodos = (todos: Todo[]): SetTodosAction => ({\n  type: 'todos/SET',\n  payload: todos,\n});\n\nexport const actions = { setTodos };\n\ntype Todos = Todo[] | [];\n\nconst todosReducer = (todos: Todos = [], action: SetTodosAction): Todo[] => {\n  switch (action.type) {\n    case 'todos/SET':\n      return action.payload;\n\n    default:\n      return todos;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React from 'react';\nimport cn from 'classnames';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  const currentTodo = useAppSelector((state) => state.currentTodo);\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      {!todos.length ? (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      ) : (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {todos.map((todo) => {\n              const { title, id, completed } = todo;\n\n              return (\n                <tr\n                  data-cy=\"todo\"\n                  key={todo.id}\n                  className={cn({\n                    'has-background-info-light': id === currentTodo?.id,\n                  })}\n                >\n                  <td className=\"is-vcentered\">{id}</td>\n                  <td className=\"is-vcentered\">\n                    {completed && (\n                      <span className=\"icon\" data-cy=\"iconCompleted\">\n                        <i className=\"fas fa-check\" />\n                      </span>\n                    )}\n                  </td>\n                  <td className=\"is-vcentered is-expanded\">\n                    <p\n                      className={cn(\n                        { 'has-text-danger': !completed },\n                        { 'has-text-success': completed },\n                      )}\n                    >\n                      {title}\n                    </p>\n                  </td>\n                  <td className=\"has-text-right is-vcentered\">\n                    <button\n                      data-cy=\"selectButton\"\n                      className=\"button\"\n                      type=\"button\"\n                      onClick={() => dispatch(actions.setTodo(todo))}\n                    >\n                      <span className=\"icon\">\n                        <i\n                          className={cn('far', {\n                            'fa-eye': id !== currentTodo?.id,\n                            'fa-eye-slash': id === currentTodo?.id,\n                          })}\n                        />\n                      </span>\n                    </button>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\n\nimport { FilterStatus } from '../../types/FilterStatus';\nimport { actions } from '../../features/filter';\n\nexport const TodoFilter: React.FC = () => {\n  const { query, status } = useAppSelector((state) => state.filter);\n  const dispatch = useAppDispatch();\n\n  const handleFilterStatus = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(actions.setStatus(event.target.value as FilterStatus));\n  };\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(actions.setQuery(event.target.value));\n  };\n\n  const handleClear = () => {\n    dispatch(actions.setClear());\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            value={status}\n            data-cy=\"statusSelect\"\n            onChange={handleFilterStatus}\n          >\n            <option value={FilterStatus.ALL}>All</option>\n            <option value={FilterStatus.ACTIVE}>Active</option>\n            <option value={FilterStatus.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleInput}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClear}\n              aria-label=\"delete\"\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\n\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { getUser } from '../../api';\n\nimport { actions } from '../../features/currentTodo';\nimport { User } from '../../types/User';\n\nimport { Loader } from '../Loader';\n\nexport const TodoModal: React.FC = () => {\n  const [user, setUser] = useState<User | null>(null);\n\n  const currentTodo = useAppSelector((state) => state.currentTodo);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    if (!currentTodo) {\n      return;\n    }\n\n    getUser(currentTodo?.userId)\n      .then((userFromServer) => {\n        setUser(userFromServer);\n      })\n      .catch((error) => {\n        throw new Error(error.message);\n      });\n  }, []);\n\n  const handleClose = () => {\n    dispatch(actions.removeTodo());\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${currentTodo?.id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClose}\n              data-cy=\"modal-close\"\n              aria-label=\"delete\"\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {currentTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {currentTodo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>{user?.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { getTodos } from './api';\nimport { actions } from './features/todos';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { TodoModal } from './components/TodoModal';\nimport { FilterStatus } from './types/FilterStatus';\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const todos = useAppSelector((state) => state.todos);\n  const currentTodo = useAppSelector((state) => state.currentTodo);\n  const { query, status } = useAppSelector((state) => state.filter);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    getTodos()\n      .then((todosFromServer) => {\n        dispatch(actions.setTodos(todosFromServer));\n      })\n      .catch((error) => {\n        throw new Error(error.message);\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const visibleTodos = useMemo(() => {\n    return todos.filter((todo) => {\n      const normalizedQuery = query.toLowerCase().trim();\n\n      const normalizedTodo = todo.title\n        .toLowerCase()\n        .trim()\n        .includes(normalizedQuery);\n\n      switch (status) {\n        case FilterStatus.ALL:\n          return normalizedTodo;\n\n        case FilterStatus.ACTIVE:\n          return normalizedTodo && !todo.completed;\n\n        case FilterStatus.COMPLETED:\n          return normalizedTodo && todo.completed;\n\n        default:\n          throw new Error('Unknown status selector');\n      }\n    });\n  }, [todos, query, status]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? <Loader /> : <TodoList todos={visibleTodos} />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}